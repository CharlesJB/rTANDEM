%\VignetteIndexEntry{The rTANDEM users guide}
%\VignetteKeywords{MassSpectrometry, Proteomics}
%\VignettePackage{rTANDEM}
\documentclass[11pt]{article}
\usepackage{hyperref}
\usepackage{url}
\usepackage{color, pdfcolmk}
\usepackage[authoryear,round]{natbib}
\bibliographystyle{plainnat}


\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}

\author{Arnaud Droit\footnote{arnaud.droit@crchuq.ulaval.ca}, Frederic Fournier\footnote{frederic.fournier@crchuq.ulaval.ca} and Charles Joly-Beauparlant\footnote{Charles.Joly-Beauparlant@crchul.ulaval.ca}}

\begin{document}
\title{rTANDEM: An R encapsulation of X!Tandem}
\maketitle



\textnormal {\normalfont}
Introduction to rTANDEM

\tableofcontents
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage


\section{Licensing}

This package and the underlying X!Tandem code are distributed under the Artistic license 1.0. You are free to use and redistribute this software. 

\section{Introduction}

X!Tandem is an open source software for protein identification from tandem mass spectrometry experiments, and rTANDEM is an R encapsulation of this software. As of now, rTANDEM provides a very basic encapsulation of X!Tandem: it has a function that takes as an argument the path to an X!Tandem style parameter file and return the path to an X!tandem style output file. The package also presents some function to transform parameters or results files into R objects and vice versa. We are planning to add functions for visualisation, data manipulation and conversion in a near future.

\section{Manifesto}

Right now, most analytic pipelines for protein identification using tandem mass spectrometry experiments are proprietary. Those pipelines often have the advantage of being user-friendly (to a certain extent), but reliance on proprietary pipelines has many downfalls. Proprietary pipelines hinder collaboration between labs by making it more difficult to analyze data that have been obtained in a different pipeline. It prevents the development of new types of analyzes or of new scientific questions by preventing the researchers from modifying the algorithms or inner settings of the analytic tools. It creates a 'black box' phenomenon where the results given by the analytic tools are to be trusted even though the process by which they have been obtained cannot be fully examined, tested or modified. 

The encapsulation of X!Tandem in R is a fisrt steps towards building a viable analytic pipeline for protein identification in R. It is our intention to create R objects for input and output as well as tools for data conversion (where this is possible). The goal is to make R an interesting and powerful framework for ms/ms data analysis just like it is for NGS analysis.

\section{rTANDEM input/output overview}

The input of a standart X!Tandem analysis is composed of several files: three .xml files setting the parameters (usually named input.xml, default-input.xml and taxonomy.xml), one or more database files, and one or more files containing the spectra to be analysed. Detailed information is available on the \href{www.thegpm.org/TANDEM/index.html}{X!Tandem website}. rTANDEM can use the xml files just like X!Tandem, or R objects can be used in lieu of the .xml files. rTANDEM provides functions to create parameters or taxonomy objects from xml files, or to create the xml files from the R parameters or taxonomy objects.
The output of a standard X!Tandem analysis is composed of a standard xml file. Since this output can be quite large, rTANDEM follows X!Tandem behaviour and writes the result of the analysis to an xml file. But the package provides a function to create an R object from the xml files. 

\subsection{The input file}

The main input file is used to fix the major parameters of the search, namely
\begin{enumerate}
\item The path to the output file (the file that will be used to store the results).
\item The path to the spectra file (the file that contains the data to be analysed).
\item The taxon used for the search. 
\item The path to a taxonomy file (a file that provides information on the databases to be used).
\item The path to a default-input file (a file that sets parameters that are common to many experiments).
\end{enumerate}

\subsection{The output file}

rTANDEM output is an XML file. The format is based on the XML language BIOML (\url{www.bioml.com}) and a full description of the format is available at \url{http://www.thegpm.org/docs/X_series_output_form.pdf}. The function GetResultsFromXML() can be used to create a R object from the xml file.

\subsection{The spectra file}

The spectra file contains the raw data from generated by the mass spectrometer. The supported formats for the data file are 'DTA', 'PKL' and 'MGF'.

\subsection{The taxonomy file}

The taxonomy file is used to link together a taxon and one or multiple fasta files. This file is not usually modified for every experiment, rather it provides the link to all databases used and should be modified only when databases are updated or replaced.  
The supported formats for database files are 'fasta' and 'fasta.pro'.

\subsection{The default-parameter file}

The default-parameter file is used to set fine-grained parameters. For example it is used to set the mass error tolerated, or to set which types of ions will be used for calculation. This file is not usually modified for every experiment, rather, a default-parameter can be created for every instrument used (the fine-grained parameters are often instrument-specific).  
The default-parameter file also provides link to formatting files (css and xsl) that are useful for consulting the output file in a web browser. 

\section{rTANDEM typical usage}

Once your various input files are ready, using rTANDEM is very straightforward. 

Just load is as you would with any other package. 

<<Loading Rtandem,eval=FALSE>>=
library(rTANDEM)
@

Then launch rTANDEM by using the command: 
<<Launching rTANDEM,eval=FALSE>>=
tandem(path_to_your_input_file)
@

A toy dataset with spectra files and fasta files as well as formatting files is included in the installation folder of rTANDEM. Running
<<ExampleFunction, eval=FALSE>>=
example("rTANDEM")
@
will create a rTParam object and use it to launch tandem on the toy dataset and database in your installation directory.

\end{document}
